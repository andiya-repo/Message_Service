name: Build, Test, and Deploy Product Version

on:
  push:
    branches:
      - development

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.10'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    # - name: Run tests
    #   run: |
    #     python -m unittest discover -s tests/

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Build Docker image
      run: docker build -t message_service_product .

    - name: Prepare SSH key and known hosts
      run: |
        mkdir -p ~/.ssh
        echo "${{ secrets.SERVER_SSH_KEY }}" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa
        echo "${{ secrets.KNOWN_HOSTS }}" > ~/.ssh/known_hosts

    - name: Verify SSH key and known hosts
      run: |
        echo "SSH Key:"
        cat ~/.ssh/id_rsa
        echo "Known Hosts:"
        cat ~/.ssh/known_hosts

    - name: Test SSH connection
      run: |
        ssh -vvv -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_HOST }} "echo 'SSH connection successful'"

    - name: Copy Docker image to VPS
      run: |
        docker save message_service_product | bzip2 | ssh -vvv -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_HOST }} 'bunzip2 | docker load'

    - name: Run Docker container on VPS
      run: |
        ssh -vvv -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_HOST }} <<EOF
          docker stop message_service_product || true
          docker rm message_service_product || true
          docker run -d --name message_service_product -p 6018:6018 message_service_product
          docker ps -a